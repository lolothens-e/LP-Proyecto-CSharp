
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaleftORleftANDnonassocIGUALDIFERENTEnonassocMENORMAYORMENORIGUALMAYORIGUALleftMASMENOSleftPORDIVIDIRMODULOrightNOTrightUMINUSABSTRACT ADD AND ARRAY_CREATION ARRAY_DECLARATION AS ASIGNAR BASE BOOL BOOL_LITERAL BREAK BYTE CASE CATCH CHAR CHAR_LITERAL CHECKED CLASS COMA CONSOLE CONST CONTINUE DCORCH DECIMAL DECREMENTO DEFAULT DELEGATE DICTIONARY DIFERENTE DIVIDIR DIVIDIRIGUAL DLLAVE DO DOUBLE DPAREN DYNAMIC ELSE ENUM EVENT EXTERN FALSE FINALLY FIXED FLECHALAMBDA FLOAT FLOAT_LITERAL FOR FOREACH GENERICO_INVALIDO GET GOTO ICORCH IDENTIFICADOR ID_INVALIDO IF IGUAL ILLAVE IN INCREMENTO INT INTERFACE INTERNAL INT_LITERAL IPAREN IS LISTA LOCK LONG MAS MASIGUAL MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MENOSIGUAL MODULO NAMESPACE NEW NOT NULL OBJECT OPERATOR OR OUT OVERRIDE PARAMS PARTIAL POR PORIGUAL PRIVATE PROTECTED PUBLIC PUNTO READONLY REF REMOVE RETURN SBYTE SEALED SENTENCIAFIN SET SHORT SIZEOF STACKALLOC STATIC STRING STRING_LITERAL STRUCT SWITCH THIS THROW TRUE TRY TYPEOF UINT ULONG UNCHECKED UNSAFE USHORT USING VAR VIRTUAL VOID VOLATILE WHILE WRITELINE YIELDinstruccion_return : RETURN expresioninstruccion_break : BREAKwhile_loop : WHILE IPAREN expresion DPAREN enter_loop_scope bloque_codigofor_loop : FOR IPAREN asignacion SENTENCIAFIN expresion SENTENCIAFIN asignacion DPAREN enter_loop_scope bloque_codigoenter_loop_scope :\n    impresion : CONSOLE PUNTO WRITELINE IPAREN imprimible DPAREN\n    \n    imprimible : expresion\n    programa : lista_sentencias\n    lista_sentencias : lista_sentencias sentencia\n                     | empty\n    \n    sentencia : definicion_funcion\n              | asignacion SENTENCIAFIN\n              | impresion SENTENCIAFIN\n              | if_statement\n              | while_loop\n              | for_loop\n              | instruccion_break SENTENCIAFIN   \n              | instruccion_return SENTENCIAFIN\n    definicion_funcion : tipo_retorno IDENTIFICADOR IPAREN DPAREN enter_function_scope bloque_codigoenter_function_scope :bloque_codigo : ILLAVE lista_sentencias DLLAVEif_statement : IF IPAREN expresion DPAREN bloque_codigo\n    asignacion : tipo_retorno IDENTIFICADOR ASIGNAR expresion\n               | IDENTIFICADOR ASIGNAR expresion\n    tipo_retorno : INT\n                    | FLOAT\n                    | STRING\n                    | BOOL\n                    | VOID\n    expresion : expresion MAS expresion\n              | expresion MENOS expresion\n              | expresion POR expresion\n              | expresion DIVIDIR expresion\n              | expresion MODULO expresion\n              | expresion AND expresion\n              | expresion OR expresion\n              | expresion MAYOR expresion\n              | expresion MENOR expresion\n              | expresion MAYORIGUAL expresion\n              | expresion MENORIGUAL expresion\n              | expresion IGUAL expresion\n              | expresion DIFERENTE expresion\n    \n    expresion : NOT expresion\n              | MENOS expresion %prec UMINUS\n    expresion : IPAREN expresion DPAREN\n    expresion : IDENTIFICADOR\n              | INT_LITERAL\n              | FLOAT_LITERAL\n              | STRING_LITERAL\n              | TRUE\n              | FALSE\n    empty :'
    
_lr_action_items = {'IDENTIFICADOR':([0,2,3,4,5,8,9,10,13,20,21,22,23,24,25,26,27,28,29,31,33,34,35,37,38,39,47,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,94,95,98,100,101,102,103,107,],[-52,14,-10,-9,-11,-14,-15,-16,30,40,-25,-26,-27,-28,-29,-12,-13,-17,-18,40,40,40,14,40,40,40,40,76,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-22,-52,-19,14,-3,14,-21,-4,]),'CONSOLE':([0,2,3,4,5,8,9,10,26,27,28,29,94,95,98,100,101,103,107,],[-52,15,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-52,-19,15,-3,-21,-4,]),'IF':([0,2,3,4,5,8,9,10,26,27,28,29,94,95,98,100,101,103,107,],[-52,16,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-52,-19,16,-3,-21,-4,]),'WHILE':([0,2,3,4,5,8,9,10,26,27,28,29,94,95,98,100,101,103,107,],[-52,17,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-52,-19,17,-3,-21,-4,]),'FOR':([0,2,3,4,5,8,9,10,26,27,28,29,94,95,98,100,101,103,107,],[-52,18,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-52,-19,18,-3,-21,-4,]),'BREAK':([0,2,3,4,5,8,9,10,26,27,28,29,94,95,98,100,101,103,107,],[-52,19,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-52,-19,19,-3,-21,-4,]),'RETURN':([0,2,3,4,5,8,9,10,26,27,28,29,94,95,98,100,101,103,107,],[-52,20,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-52,-19,20,-3,-21,-4,]),'INT':([0,2,3,4,5,8,9,10,26,27,28,29,35,94,95,98,100,101,102,103,107,],[-52,21,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,21,-22,-52,-19,21,-3,21,-21,-4,]),'FLOAT':([0,2,3,4,5,8,9,10,26,27,28,29,35,94,95,98,100,101,102,103,107,],[-52,22,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,22,-22,-52,-19,22,-3,22,-21,-4,]),'STRING':([0,2,3,4,5,8,9,10,26,27,28,29,35,94,95,98,100,101,102,103,107,],[-52,23,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,23,-22,-52,-19,23,-3,23,-21,-4,]),'BOOL':([0,2,3,4,5,8,9,10,26,27,28,29,35,94,95,98,100,101,102,103,107,],[-52,24,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,24,-22,-52,-19,24,-3,24,-21,-4,]),'VOID':([0,2,3,4,5,8,9,10,26,27,28,29,35,94,95,98,100,101,102,103,107,],[-52,25,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,25,-22,-52,-19,25,-3,25,-21,-4,]),'$end':([0,1,2,3,4,5,8,9,10,26,27,28,29,94,98,101,103,107,],[-52,0,-8,-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-19,-3,-21,-4,]),'DLLAVE':([3,4,5,8,9,10,26,27,28,29,94,95,98,100,101,103,107,],[-10,-9,-11,-14,-15,-16,-12,-13,-17,-18,-22,-52,-19,103,-3,-21,-4,]),'SENTENCIAFIN':([6,7,11,12,19,36,40,41,42,43,44,45,48,52,67,68,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,99,],[26,27,28,29,-2,-1,-46,-47,-48,-49,-50,-51,-24,75,-44,-43,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,102,-6,]),'ASIGNAR':([14,30,76,],[31,47,47,]),'PUNTO':([15,],[32,]),'IPAREN':([16,17,18,20,30,31,33,34,37,38,39,47,49,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[33,34,35,39,46,39,39,39,39,39,39,39,72,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'NOT':([20,31,33,34,37,38,39,47,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'MENOS':([20,31,33,34,36,37,38,39,40,41,42,43,44,45,47,48,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[37,37,37,37,55,37,37,37,-46,-47,-48,-49,-50,-51,37,55,55,55,37,37,37,37,37,37,37,37,37,37,37,37,37,-44,-43,55,55,37,37,-30,-31,-32,-33,-34,55,55,55,55,55,55,55,55,-45,55,55,]),'INT_LITERAL':([20,31,33,34,37,38,39,47,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'FLOAT_LITERAL':([20,31,33,34,37,38,39,47,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'STRING_LITERAL':([20,31,33,34,37,38,39,47,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TRUE':([20,31,33,34,37,38,39,47,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([20,31,33,34,37,38,39,47,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'WRITELINE':([32,],[49,]),'MAS':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[54,-46,-47,-48,-49,-50,-51,54,54,54,-44,-43,54,54,-30,-31,-32,-33,-34,54,54,54,54,54,54,54,54,-45,54,54,]),'POR':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[56,-46,-47,-48,-49,-50,-51,56,56,56,-44,-43,56,56,56,56,-32,-33,-34,56,56,56,56,56,56,56,56,-45,56,56,]),'DIVIDIR':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[57,-46,-47,-48,-49,-50,-51,57,57,57,-44,-43,57,57,57,57,-32,-33,-34,57,57,57,57,57,57,57,57,-45,57,57,]),'MODULO':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[58,-46,-47,-48,-49,-50,-51,58,58,58,-44,-43,58,58,58,58,-32,-33,-34,58,58,58,58,58,58,58,58,-45,58,58,]),'AND':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[59,-46,-47,-48,-49,-50,-51,59,59,59,-44,-43,59,59,-30,-31,-32,-33,-34,-35,59,-37,-38,-39,-40,-41,-42,-45,59,59,]),'OR':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[60,-46,-47,-48,-49,-50,-51,60,60,60,-44,-43,60,60,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,60,60,]),'MAYOR':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[61,-46,-47,-48,-49,-50,-51,61,61,61,-44,-43,61,61,-30,-31,-32,-33,-34,61,61,None,None,None,None,61,61,-45,61,61,]),'MENOR':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[62,-46,-47,-48,-49,-50,-51,62,62,62,-44,-43,62,62,-30,-31,-32,-33,-34,62,62,None,None,None,None,62,62,-45,62,62,]),'MAYORIGUAL':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[63,-46,-47,-48,-49,-50,-51,63,63,63,-44,-43,63,63,-30,-31,-32,-33,-34,63,63,None,None,None,None,63,63,-45,63,63,]),'MENORIGUAL':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[64,-46,-47,-48,-49,-50,-51,64,64,64,-44,-43,64,64,-30,-31,-32,-33,-34,64,64,None,None,None,None,64,64,-45,64,64,]),'IGUAL':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[65,-46,-47,-48,-49,-50,-51,65,65,65,-44,-43,65,65,-30,-31,-32,-33,-34,65,65,-37,-38,-39,-40,None,None,-45,65,65,]),'DIFERENTE':([36,40,41,42,43,44,45,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,],[66,-46,-47,-48,-49,-50,-51,66,66,66,-44,-43,66,66,-30,-31,-32,-33,-34,66,66,-37,-38,-39,-40,None,None,-45,66,66,]),'DPAREN':([40,41,42,43,44,45,46,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,104,],[-46,-47,-48,-49,-50,-51,70,-24,73,74,-44,-43,90,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,99,-7,105,]),'ILLAVE':([70,73,74,91,96,105,106,],[-20,95,-5,95,95,-5,95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_sentencias':([0,95,],[2,100,]),'empty':([0,95,],[3,3,]),'sentencia':([2,100,],[4,4,]),'definicion_funcion':([2,100,],[5,5,]),'asignacion':([2,35,100,102,],[6,52,6,104,]),'impresion':([2,100,],[7,7,]),'if_statement':([2,100,],[8,8,]),'while_loop':([2,100,],[9,9,]),'for_loop':([2,100,],[10,10,]),'instruccion_break':([2,100,],[11,11,]),'instruccion_return':([2,100,],[12,12,]),'tipo_retorno':([2,35,100,102,],[13,53,13,53,]),'expresion':([20,31,33,34,37,38,39,47,54,55,56,57,58,59,60,61,62,63,64,65,66,72,75,],[36,48,50,51,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,93,97,]),'enter_function_scope':([70,],[91,]),'imprimible':([72,],[92,]),'bloque_codigo':([73,91,96,106,],[94,98,101,107,]),'enter_loop_scope':([74,105,],[96,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('instruccion_return -> RETURN expresion','instruccion_return',2,'p_instruccion_return','sintactico.py',78),
  ('instruccion_break -> BREAK','instruccion_break',1,'p_instruccion_break','sintactico.py',102),
  ('while_loop -> WHILE IPAREN expresion DPAREN enter_loop_scope bloque_codigo','while_loop',6,'p_while_loop','sintactico.py',112),
  ('for_loop -> FOR IPAREN asignacion SENTENCIAFIN expresion SENTENCIAFIN asignacion DPAREN enter_loop_scope bloque_codigo','for_loop',10,'p_for_loop','sintactico.py',117),
  ('enter_loop_scope -> <empty>','enter_loop_scope',0,'p_enter_loop_scope','sintactico.py',122),
  ('impresion -> CONSOLE PUNTO WRITELINE IPAREN imprimible DPAREN','impresion',6,'p_impresion','sintactico.py',129),
  ('imprimible -> expresion','imprimible',1,'p_imprimible','sintactico.py',135),
  ('programa -> lista_sentencias','programa',1,'p_programa','sintactico.py',139),
  ('lista_sentencias -> lista_sentencias sentencia','lista_sentencias',2,'p_lista_sentencias','sintactico.py',145),
  ('lista_sentencias -> empty','lista_sentencias',1,'p_lista_sentencias','sintactico.py',146),
  ('sentencia -> definicion_funcion','sentencia',1,'p_sentencia','sintactico.py',164),
  ('sentencia -> asignacion SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',165),
  ('sentencia -> impresion SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',166),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','sintactico.py',167),
  ('sentencia -> while_loop','sentencia',1,'p_sentencia','sintactico.py',168),
  ('sentencia -> for_loop','sentencia',1,'p_sentencia','sintactico.py',169),
  ('sentencia -> instruccion_break SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',170),
  ('sentencia -> instruccion_return SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',171),
  ('definicion_funcion -> tipo_retorno IDENTIFICADOR IPAREN DPAREN enter_function_scope bloque_codigo','definicion_funcion',6,'p_definicion_funcion','sintactico.py',176),
  ('enter_function_scope -> <empty>','enter_function_scope',0,'p_enter_function_scope','sintactico.py',183),
  ('bloque_codigo -> ILLAVE lista_sentencias DLLAVE','bloque_codigo',3,'p_bloque_codigo','sintactico.py',199),
  ('if_statement -> IF IPAREN expresion DPAREN bloque_codigo','if_statement',5,'p_if_statement','sintactico.py',204),
  ('asignacion -> tipo_retorno IDENTIFICADOR ASIGNAR expresion','asignacion',4,'p_asignacion','sintactico.py',209),
  ('asignacion -> IDENTIFICADOR ASIGNAR expresion','asignacion',3,'p_asignacion','sintactico.py',210),
  ('tipo_retorno -> INT','tipo_retorno',1,'p_tipo_retorno','sintactico.py',218),
  ('tipo_retorno -> FLOAT','tipo_retorno',1,'p_tipo_retorno','sintactico.py',219),
  ('tipo_retorno -> STRING','tipo_retorno',1,'p_tipo_retorno','sintactico.py',220),
  ('tipo_retorno -> BOOL','tipo_retorno',1,'p_tipo_retorno','sintactico.py',221),
  ('tipo_retorno -> VOID','tipo_retorno',1,'p_tipo_retorno','sintactico.py',222),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_operadores','sintactico.py',229),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_operadores','sintactico.py',230),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_operadores','sintactico.py',231),
  ('expresion -> expresion DIVIDIR expresion','expresion',3,'p_expresion_operadores','sintactico.py',232),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_operadores','sintactico.py',233),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_operadores','sintactico.py',234),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_operadores','sintactico.py',235),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_operadores','sintactico.py',236),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_operadores','sintactico.py',237),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_operadores','sintactico.py',238),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_operadores','sintactico.py',239),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_operadores','sintactico.py',240),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_operadores','sintactico.py',241),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','sintactico.py',247),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','sintactico.py',248),
  ('expresion -> IPAREN expresion DPAREN','expresion',3,'p_expresion_agrupacion','sintactico.py',256),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_base','sintactico.py',261),
  ('expresion -> INT_LITERAL','expresion',1,'p_expresion_base','sintactico.py',262),
  ('expresion -> FLOAT_LITERAL','expresion',1,'p_expresion_base','sintactico.py',263),
  ('expresion -> STRING_LITERAL','expresion',1,'p_expresion_base','sintactico.py',264),
  ('expresion -> TRUE','expresion',1,'p_expresion_base','sintactico.py',265),
  ('expresion -> FALSE','expresion',1,'p_expresion_base','sintactico.py',266),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',281),
]
