
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaleftORleftANDnonassocIGUALDIFERENTEnonassocMENORMAYORMENORIGUALMAYORIGUALleftMASMENOSleftPORDIVIDIRMODULOrightNOTrightUMINUSABSTRACT ADD AND ARRAY_CREATION ARRAY_DECLARATION ARROBA AS ASIGNAR BASE BOOL BOOL_LITERAL BREAK BYTE CASE CATCH CHAR CHAR_LITERAL CHECKED CLASS COMA CONSOLE CONST CONTINUE DCORCH DECIMAL DECREMENTO DEFAULT DELEGATE DICTIONARY DIFERENTE DIVIDIR DIVIDIRIGUAL DLLAVE DO DOUBLE DPAREN DYNAMIC ELSE ENUM EVENT EXTERN FALSE FINALLY FIXED FLECHALAMBDA FLOAT FLOAT_LITERAL FOR FOREACH FORMAT GENERICO_INVALIDO GET GOTO ICORCH IDENTIFICADOR ID_INVALIDO IF IGUAL ILLAVE IMPORT IN INCREMENTO INT INTERFACE INTERNAL INT_LITERAL IPAREN IS LISTA LOCK LONG MAS MASIGUAL MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MENOSIGUAL MODULO NAMESPACE NEW NEWLINE NOT NULL OBJECT OPERATOR OR OUT OVERRIDE PARAMS PARTIAL POR PORIGUAL PRIVATE PROTECTED PUBLIC PUNTO READONLY REF REMOVE RETURN SBYTE SEALED SENTENCIAFIN SET SHORT SIZEOF STACKALLOC STATIC STRING STRING_LITERAL STRUCT SWITCH THIS THROW TRUE TRY TYPEOF UINT ULONG UNCHECKED UNSAFE USHORT USING VAR VIRTUAL VOID VOLATILE WHILE WRITELINE YIELD\nasignacion : tipo_lista IDENTIFICADOR ASIGNAR expresion_lista SENTENCIAFIN\n           | tipo_array IDENTIFICADOR ASIGNAR expresion_array SENTENCIAFIN\n\ntipo_lista : LISTA MENOR tipo_retorno MAYOR \n\ntipo_array : ARRAY_DECLARATION\n\nexpresion_lista : NEW LISTA MENOR tipo_retorno MAYOR IPAREN DPAREN\n                | NEW LISTA MENOR tipo_retorno MAYOR ILLAVE elementos DLLAVE\n\nprimitivo : FLOAT_LITERAL\n         | INT_LITERAL\n         | CHAR_LITERAL\n         | STRING_LITERAL\n         | BOOL_LITERAL\n\nelementos : primitivo COMA elementos \n            | primitivo \n\nexpresion_array : ARRAY_CREATION\n\nprograma : imports definicion_clase\n         | definicion_clase\n            \npackage_route : IDENTIFICADOR PUNTO package_route\n              | IDENTIFICADOR  \n\nimports : IMPORT package_route SENTENCIAFIN NEWLINE imports\n        | IMPORT package_route SENTENCIAFIN NEWLINE\nbloque_codigo : ILLAVE lista_sentencias DLLAVE\nlista_sentencias : lista_sentencias sentencia\n                 | empty\nempty :\ndefinicion_clase : CLASS IDENTIFICADOR enter_class_scope bloque_codigo \nenter_class_scope :definicion_funcion : modificador_acceso tipo_retorno IDENTIFICADOR IPAREN DPAREN enter_function_scope bloque_codigoenter_function_scope :instruccion_return : RETURN expresioninstruccion_break : BREAK\nimpresion : CONSOLE PUNTO WRITELINE IPAREN imprimible DPAREN\n\nimprimible : expresion\nincremento : IDENTIFICADOR INCREMENTOdecremento : IDENTIFICADOR DECREMENTO\nsentencia : definicion_funcion\n          | asignacion SENTENCIAFIN\n          | impresion SENTENCIAFIN\n          | incremento SENTENCIAFIN\n          | decremento SENTENCIAFIN\n          | if_statement\n          | if_else_statement\n          | while_loop\n          | for_loop\n          | instruccion_break SENTENCIAFIN   \n          | instruccion_return SENTENCIAFIN\nwhile_loop : WHILE IPAREN expresion DPAREN enter_loop_scope bloque_codigo\nfor_operables : incremento \n              | decremento\nfor_loop : FOR IPAREN asignacion expresion SENTENCIAFIN for_operables DPAREN enter_loop_scope bloque_codigoenter_loop_scope :\nmodificador_acceso : PUBLIC\n              | PRIVATE \n              | PROTECTED\n              | INTERNAL\n              | PROTECTED INTERNAL\n              | PRIVATE PROTECTED\nif_statement : IF IPAREN expresion DPAREN bloque_codigoif_else_statement : IF IPAREN expresion DPAREN bloque_codigo ELSE bloque_codigo\nexpresion : NOT expresion\n          | MENOS expresion %prec UMINUS\nexpresion : IPAREN expresion DPAREN\nexpresion : IDENTIFICADOR\n          | INT_LITERAL\n          | FLOAT_LITERAL\n          | STRING_LITERAL\n          | TRUE\n          | FALSE\n\nexpresion : expresion MAS expresion\n          | expresion MENOS expresion\n          | expresion POR expresion\n          | expresion DIVIDIR expresion\n          | expresion MODULO expresion\n          | expresion AND expresion\n          | expresion OR expresion\n          | expresion MAYOR expresion\n          | expresion MENOR expresion\n          | expresion MAYORIGUAL expresion\n          | expresion MENORIGUAL expresion\n          | expresion IGUAL expresion\n          | expresion DIFERENTE expresion\n\nasignacion : tipo_retorno IDENTIFICADOR ASIGNAR expresion SENTENCIAFIN\n           | IDENTIFICADOR ASIGNAR expresion SENTENCIAFIN\ntipo_retorno : INT\n| FLOAT\n| STRING\n| BOOL\n| VOID'
    
_lr_action_items = {'IMPORT':([0,13,],[4,4,]),'CLASS':([0,2,13,17,],[5,5,-20,-19,]),'$end':([1,3,6,15,20,],[0,-16,-15,-25,-21,]),'IDENTIFICADOR':([4,5,11,16,18,19,20,21,22,27,28,29,30,34,36,37,43,49,50,51,52,53,54,55,56,57,58,59,60,61,63,69,70,71,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,137,139,140,142,145,147,152,157,159,165,],[8,9,8,-24,35,-23,-21,-22,-35,-40,-41,-42,-43,62,66,67,76,-4,-83,-84,-85,-86,-87,-36,-37,-38,-39,-44,-45,85,76,76,76,94,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-82,76,-3,-81,-1,-2,-57,156,-46,-27,-58,-49,]),'SENTENCIAFIN':([7,8,14,23,24,25,26,31,32,42,64,65,72,76,77,78,79,80,81,87,108,109,113,114,115,117,118,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,142,150,166,174,],[10,-18,-17,55,56,57,58,59,60,-30,-33,-34,-29,-62,-63,-64,-65,-66,-67,114,-59,-60,139,-82,140,142,-14,147,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-61,-81,-1,-2,-31,-5,-6,]),'PUNTO':([8,38,],[11,68,]),'ILLAVE':([9,12,120,121,138,146,148,151,160,161,162,],[-26,16,16,-50,-28,16,16,16,-50,164,16,]),'NEWLINE':([10,],[13,]),'DLLAVE':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,167,168,169,170,171,172,173,176,],[-24,20,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,174,-13,-7,-8,-9,-10,-11,-12,]),'CONSOLE':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,38,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'IF':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,39,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'WHILE':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,40,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'FOR':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,41,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'BREAK':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,42,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'RETURN':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,43,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'PUBLIC':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,44,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'PRIVATE':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,145,152,157,159,165,],[-24,45,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'PROTECTED':([16,18,19,20,21,22,27,28,29,30,45,55,56,57,58,59,60,145,152,157,159,165,],[-24,46,-23,-21,-22,-35,-40,-41,-42,-43,82,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'INTERNAL':([16,18,19,20,21,22,27,28,29,30,46,55,56,57,58,59,60,145,152,157,159,165,],[-24,47,-23,-21,-22,-35,-40,-41,-42,-43,83,-36,-37,-38,-39,-44,-45,-57,-46,-27,-58,-49,]),'LISTA':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,71,116,145,152,157,159,165,],[-24,48,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,48,141,-57,-46,-27,-58,-49,]),'ARRAY_DECLARATION':([16,18,19,20,21,22,27,28,29,30,55,56,57,58,59,60,71,145,152,157,159,165,],[-24,49,-23,-21,-22,-35,-40,-41,-42,-43,-36,-37,-38,-39,-44,-45,49,-57,-46,-27,-58,-49,]),'INT':([16,18,19,20,21,22,27,28,29,30,33,44,45,46,47,55,56,57,58,59,60,71,82,83,84,145,149,152,157,159,165,],[-24,50,-23,-21,-22,-35,-40,-41,-42,-43,50,-51,-52,-53,-54,-36,-37,-38,-39,-44,-45,50,-56,-55,50,-57,50,-46,-27,-58,-49,]),'FLOAT':([16,18,19,20,21,22,27,28,29,30,33,44,45,46,47,55,56,57,58,59,60,71,82,83,84,145,149,152,157,159,165,],[-24,51,-23,-21,-22,-35,-40,-41,-42,-43,51,-51,-52,-53,-54,-36,-37,-38,-39,-44,-45,51,-56,-55,51,-57,51,-46,-27,-58,-49,]),'STRING':([16,18,19,20,21,22,27,28,29,30,33,44,45,46,47,55,56,57,58,59,60,71,82,83,84,145,149,152,157,159,165,],[-24,52,-23,-21,-22,-35,-40,-41,-42,-43,52,-51,-52,-53,-54,-36,-37,-38,-39,-44,-45,52,-56,-55,52,-57,52,-46,-27,-58,-49,]),'BOOL':([16,18,19,20,21,22,27,28,29,30,33,44,45,46,47,55,56,57,58,59,60,71,82,83,84,145,149,152,157,159,165,],[-24,53,-23,-21,-22,-35,-40,-41,-42,-43,53,-51,-52,-53,-54,-36,-37,-38,-39,-44,-45,53,-56,-55,53,-57,53,-46,-27,-58,-49,]),'VOID':([16,18,19,20,21,22,27,28,29,30,33,44,45,46,47,55,56,57,58,59,60,71,82,83,84,145,149,152,157,159,165,],[-24,54,-23,-21,-22,-35,-40,-41,-42,-43,54,-51,-52,-53,-54,-36,-37,-38,-39,-44,-45,54,-56,-55,54,-57,54,-46,-27,-58,-49,]),'ELSE':([20,145,],[-21,151,]),'ASIGNAR':([35,62,66,67,94,],[63,86,88,89,63,]),'INCREMENTO':([35,156,],[64,64,]),'DECREMENTO':([35,156,],[65,65,]),'IPAREN':([39,40,41,43,63,69,70,73,74,75,85,86,90,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,139,140,142,161,],[69,70,71,75,75,75,75,75,75,75,112,75,119,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-82,75,-81,-1,-2,163,]),'NOT':([43,63,69,70,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,139,140,142,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-82,73,-81,-1,-2,]),'MENOS':([43,63,69,70,72,73,74,75,76,77,78,79,80,81,86,87,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,119,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,142,144,],[74,74,74,74,96,74,74,74,-62,-63,-64,-65,-66,-67,74,96,96,96,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-59,-60,96,96,-82,74,96,-68,-69,-70,-71,-72,96,96,96,96,96,96,96,96,-61,-81,-1,-2,96,]),'INT_LITERAL':([43,63,69,70,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,139,140,142,164,175,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-82,77,-81,-1,-2,170,170,]),'FLOAT_LITERAL':([43,63,69,70,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,139,140,142,164,175,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-82,78,-81,-1,-2,169,169,]),'STRING_LITERAL':([43,63,69,70,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,139,140,142,164,175,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-82,79,-81,-1,-2,172,172,]),'TRUE':([43,63,69,70,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,139,140,142,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-82,80,-81,-1,-2,]),'FALSE':([43,63,69,70,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,114,119,139,140,142,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-82,81,-81,-1,-2,]),'MENOR':([48,72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,141,144,],[84,103,-62,-63,-64,-65,-66,-67,103,103,103,-59,-60,103,103,103,-68,-69,-70,-71,-72,103,103,None,None,None,None,103,103,-61,149,103,]),'MAYOR':([50,51,52,53,54,72,76,77,78,79,80,81,87,91,92,108,109,110,111,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,158,],[-83,-84,-85,-86,-87,102,-62,-63,-64,-65,-66,-67,102,102,102,-59,-60,102,137,102,102,-68,-69,-70,-71,-72,102,102,None,None,None,None,102,102,-61,102,161,]),'DPAREN':([64,65,76,77,78,79,80,81,91,92,108,109,110,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,144,153,154,155,163,],[-33,-34,-62,-63,-64,-65,-66,-67,120,121,-59,-60,136,138,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-61,150,-32,160,-47,-48,166,]),'WRITELINE':([68,],[90,]),'MAS':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[95,-62,-63,-64,-65,-66,-67,95,95,95,-59,-60,95,95,95,-68,-69,-70,-71,-72,95,95,95,95,95,95,95,95,-61,95,]),'POR':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[97,-62,-63,-64,-65,-66,-67,97,97,97,-59,-60,97,97,97,97,97,-70,-71,-72,97,97,97,97,97,97,97,97,-61,97,]),'DIVIDIR':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[98,-62,-63,-64,-65,-66,-67,98,98,98,-59,-60,98,98,98,98,98,-70,-71,-72,98,98,98,98,98,98,98,98,-61,98,]),'MODULO':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[99,-62,-63,-64,-65,-66,-67,99,99,99,-59,-60,99,99,99,99,99,-70,-71,-72,99,99,99,99,99,99,99,99,-61,99,]),'AND':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[100,-62,-63,-64,-65,-66,-67,100,100,100,-59,-60,100,100,100,-68,-69,-70,-71,-72,-73,100,-75,-76,-77,-78,-79,-80,-61,100,]),'OR':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[101,-62,-63,-64,-65,-66,-67,101,101,101,-59,-60,101,101,101,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-61,101,]),'MAYORIGUAL':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[104,-62,-63,-64,-65,-66,-67,104,104,104,-59,-60,104,104,104,-68,-69,-70,-71,-72,104,104,None,None,None,None,104,104,-61,104,]),'MENORIGUAL':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[105,-62,-63,-64,-65,-66,-67,105,105,105,-59,-60,105,105,105,-68,-69,-70,-71,-72,105,105,None,None,None,None,105,105,-61,105,]),'IGUAL':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[106,-62,-63,-64,-65,-66,-67,106,106,106,-59,-60,106,106,106,-68,-69,-70,-71,-72,106,106,-75,-76,-77,-78,None,None,-61,106,]),'DIFERENTE':([72,76,77,78,79,80,81,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,144,],[107,-62,-63,-64,-65,-66,-67,107,107,107,-59,-60,107,107,107,-68,-69,-70,-71,-72,107,107,-75,-76,-77,-78,None,None,-61,107,]),'NEW':([88,],[116,]),'ARRAY_CREATION':([89,],[118,]),'CHAR_LITERAL':([164,175,],[171,171,]),'BOOL_LITERAL':([164,175,],[173,173,]),'COMA':([168,169,170,171,172,173,],[175,-7,-8,-9,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'imports':([0,13,],[2,17,]),'definicion_clase':([0,2,],[3,6,]),'package_route':([4,11,],[7,14,]),'enter_class_scope':([9,],[12,]),'bloque_codigo':([12,120,146,148,151,162,],[15,145,152,157,159,165,]),'lista_sentencias':([16,],[18,]),'empty':([16,],[19,]),'sentencia':([18,],[21,]),'definicion_funcion':([18,],[22,]),'asignacion':([18,71,],[23,93,]),'impresion':([18,],[24,]),'incremento':([18,147,],[25,154,]),'decremento':([18,147,],[26,155,]),'if_statement':([18,],[27,]),'if_else_statement':([18,],[28,]),'while_loop':([18,],[29,]),'for_loop':([18,],[30,]),'instruccion_break':([18,],[31,]),'instruccion_return':([18,],[32,]),'modificador_acceso':([18,],[33,]),'tipo_retorno':([18,33,71,84,149,],[34,61,34,111,158,]),'tipo_lista':([18,71,],[36,36,]),'tipo_array':([18,71,],[37,37,]),'expresion':([43,63,69,70,73,74,75,86,93,95,96,97,98,99,100,101,102,103,104,105,106,107,119,],[72,87,91,92,108,109,110,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,144,]),'expresion_lista':([88,],[115,]),'expresion_array':([89,],[117,]),'imprimible':([119,],[143,]),'enter_loop_scope':([121,160,],[146,162,]),'enter_function_scope':([138,],[148,]),'for_operables':([147,],[153,]),'elementos':([164,175,],[167,176,]),'primitivo':([164,175,],[168,168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('asignacion -> tipo_lista IDENTIFICADOR ASIGNAR expresion_lista SENTENCIAFIN','asignacion',5,'p_asignacion_compleja','sintactico.py',67),
  ('asignacion -> tipo_array IDENTIFICADOR ASIGNAR expresion_array SENTENCIAFIN','asignacion',5,'p_asignacion_compleja','sintactico.py',68),
  ('tipo_lista -> LISTA MENOR tipo_retorno MAYOR','tipo_lista',4,'p_tipo_lista','sintactico.py',98),
  ('tipo_array -> ARRAY_DECLARATION','tipo_array',1,'p_tipo_array','sintactico.py',104),
  ('expresion_lista -> NEW LISTA MENOR tipo_retorno MAYOR IPAREN DPAREN','expresion_lista',7,'p_expresion_lista','sintactico.py',111),
  ('expresion_lista -> NEW LISTA MENOR tipo_retorno MAYOR ILLAVE elementos DLLAVE','expresion_lista',8,'p_expresion_lista','sintactico.py',112),
  ('primitivo -> FLOAT_LITERAL','primitivo',1,'p_primitivo','sintactico.py',128),
  ('primitivo -> INT_LITERAL','primitivo',1,'p_primitivo','sintactico.py',129),
  ('primitivo -> CHAR_LITERAL','primitivo',1,'p_primitivo','sintactico.py',130),
  ('primitivo -> STRING_LITERAL','primitivo',1,'p_primitivo','sintactico.py',131),
  ('primitivo -> BOOL_LITERAL','primitivo',1,'p_primitivo','sintactico.py',132),
  ('elementos -> primitivo COMA elementos','elementos',3,'p_elementos','sintactico.py',150),
  ('elementos -> primitivo','elementos',1,'p_elementos','sintactico.py',151),
  ('expresion_array -> ARRAY_CREATION','expresion_array',1,'p_expresion_array','sintactico.py',170),
  ('programa -> imports definicion_clase','programa',2,'p_programa','sintactico.py',230),
  ('programa -> definicion_clase','programa',1,'p_programa','sintactico.py',231),
  ('package_route -> IDENTIFICADOR PUNTO package_route','package_route',3,'p_package_route','sintactico.py',237),
  ('package_route -> IDENTIFICADOR','package_route',1,'p_package_route','sintactico.py',238),
  ('imports -> IMPORT package_route SENTENCIAFIN NEWLINE imports','imports',5,'p_imports','sintactico.py',243),
  ('imports -> IMPORT package_route SENTENCIAFIN NEWLINE','imports',4,'p_imports','sintactico.py',244),
  ('bloque_codigo -> ILLAVE lista_sentencias DLLAVE','bloque_codigo',3,'p_bloque_codigo','sintactico.py',249),
  ('lista_sentencias -> lista_sentencias sentencia','lista_sentencias',2,'p_lista_sentencias','sintactico.py',255),
  ('lista_sentencias -> empty','lista_sentencias',1,'p_lista_sentencias','sintactico.py',256),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',265),
  ('definicion_clase -> CLASS IDENTIFICADOR enter_class_scope bloque_codigo','definicion_clase',4,'p_definicion_clase','sintactico.py',278),
  ('enter_class_scope -> <empty>','enter_class_scope',0,'p_enter_class_scope','sintactico.py',282),
  ('definicion_funcion -> modificador_acceso tipo_retorno IDENTIFICADOR IPAREN DPAREN enter_function_scope bloque_codigo','definicion_funcion',7,'p_definicion_funcion','sintactico.py',297),
  ('enter_function_scope -> <empty>','enter_function_scope',0,'p_enter_function_scope','sintactico.py',302),
  ('instruccion_return -> RETURN expresion','instruccion_return',2,'p_instruccion_return','sintactico.py',317),
  ('instruccion_break -> BREAK','instruccion_break',1,'p_instruccion_break','sintactico.py',338),
  ('impresion -> CONSOLE PUNTO WRITELINE IPAREN imprimible DPAREN','impresion',6,'p_impresion','sintactico.py',348),
  ('imprimible -> expresion','imprimible',1,'p_imprimible','sintactico.py',354),
  ('incremento -> IDENTIFICADOR INCREMENTO','incremento',2,'p_incremento','sintactico.py',360),
  ('decremento -> IDENTIFICADOR DECREMENTO','decremento',2,'p_decremento','sintactico.py',364),
  ('sentencia -> definicion_funcion','sentencia',1,'p_sentencia','sintactico.py',371),
  ('sentencia -> asignacion SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',372),
  ('sentencia -> impresion SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',373),
  ('sentencia -> incremento SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',374),
  ('sentencia -> decremento SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',375),
  ('sentencia -> if_statement','sentencia',1,'p_sentencia','sintactico.py',376),
  ('sentencia -> if_else_statement','sentencia',1,'p_sentencia','sintactico.py',377),
  ('sentencia -> while_loop','sentencia',1,'p_sentencia','sintactico.py',378),
  ('sentencia -> for_loop','sentencia',1,'p_sentencia','sintactico.py',379),
  ('sentencia -> instruccion_break SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',380),
  ('sentencia -> instruccion_return SENTENCIAFIN','sentencia',2,'p_sentencia','sintactico.py',381),
  ('while_loop -> WHILE IPAREN expresion DPAREN enter_loop_scope bloque_codigo','while_loop',6,'p_while_loop','sintactico.py',388),
  ('for_operables -> incremento','for_operables',1,'p_for_operables','sintactico.py',394),
  ('for_operables -> decremento','for_operables',1,'p_for_operables','sintactico.py',395),
  ('for_loop -> FOR IPAREN asignacion expresion SENTENCIAFIN for_operables DPAREN enter_loop_scope bloque_codigo','for_loop',9,'p_for_loop','sintactico.py',400),
  ('enter_loop_scope -> <empty>','enter_loop_scope',0,'p_enter_loop_scope','sintactico.py',409),
  ('modificador_acceso -> PUBLIC','modificador_acceso',1,'p_modificador_acceso','sintactico.py',414),
  ('modificador_acceso -> PRIVATE','modificador_acceso',1,'p_modificador_acceso','sintactico.py',415),
  ('modificador_acceso -> PROTECTED','modificador_acceso',1,'p_modificador_acceso','sintactico.py',416),
  ('modificador_acceso -> INTERNAL','modificador_acceso',1,'p_modificador_acceso','sintactico.py',417),
  ('modificador_acceso -> PROTECTED INTERNAL','modificador_acceso',2,'p_modificador_acceso','sintactico.py',418),
  ('modificador_acceso -> PRIVATE PROTECTED','modificador_acceso',2,'p_modificador_acceso','sintactico.py',419),
  ('if_statement -> IF IPAREN expresion DPAREN bloque_codigo','if_statement',5,'p_if_statement','sintactico.py',424),
  ('if_else_statement -> IF IPAREN expresion DPAREN bloque_codigo ELSE bloque_codigo','if_else_statement',7,'p_if_else_statement','sintactico.py',428),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','sintactico.py',434),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','sintactico.py',435),
  ('expresion -> IPAREN expresion DPAREN','expresion',3,'p_expresion_agrupacion','sintactico.py',443),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_base','sintactico.py',448),
  ('expresion -> INT_LITERAL','expresion',1,'p_expresion_base','sintactico.py',449),
  ('expresion -> FLOAT_LITERAL','expresion',1,'p_expresion_base','sintactico.py',450),
  ('expresion -> STRING_LITERAL','expresion',1,'p_expresion_base','sintactico.py',451),
  ('expresion -> TRUE','expresion',1,'p_expresion_base','sintactico.py',452),
  ('expresion -> FALSE','expresion',1,'p_expresion_base','sintactico.py',453),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_operadores','sintactico.py',466),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_operadores','sintactico.py',467),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_operadores','sintactico.py',468),
  ('expresion -> expresion DIVIDIR expresion','expresion',3,'p_expresion_operadores','sintactico.py',469),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_operadores','sintactico.py',470),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_operadores','sintactico.py',471),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_operadores','sintactico.py',472),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_operadores','sintactico.py',473),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_operadores','sintactico.py',474),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_operadores','sintactico.py',475),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_operadores','sintactico.py',476),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_operadores','sintactico.py',477),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_operadores','sintactico.py',478),
  ('asignacion -> tipo_retorno IDENTIFICADOR ASIGNAR expresion SENTENCIAFIN','asignacion',5,'p_asignacion','sintactico.py',485),
  ('asignacion -> IDENTIFICADOR ASIGNAR expresion SENTENCIAFIN','asignacion',4,'p_asignacion','sintactico.py',486),
  ('tipo_retorno -> INT','tipo_retorno',1,'p_tipo_retorno','sintactico.py',522),
  ('tipo_retorno -> FLOAT','tipo_retorno',1,'p_tipo_retorno','sintactico.py',523),
  ('tipo_retorno -> STRING','tipo_retorno',1,'p_tipo_retorno','sintactico.py',524),
  ('tipo_retorno -> BOOL','tipo_retorno',1,'p_tipo_retorno','sintactico.py',525),
  ('tipo_retorno -> VOID','tipo_retorno',1,'p_tipo_retorno','sintactico.py',526),
]
